<?php

// This file is auto-generated, don't edit it. Thanks.

namespace AlibabaCloud\SDK\Cdn\V20180510\Models\DescribeDomainDetailDataByLayerResponseBody\data;

use AlibabaCloud\Tea\Model;

class dataModule extends Model
{
    /**
     * @description The end of the time range to query. Specify the time in the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time must be in UTC.
     *
     * >  The end time must be later than the start time.
     * @example 2
     *
     * @var int
     */
    public $acc;

    /**
     * @description Queries the detailed data of one or more accelerated domain names by protocol. Data is collected by domain name.
     *
     * @example 21060178715.146667
     *
     * @var float
     */
    public $bps;

    /**
     * @description DescribeDomainDetailDataByLayer
     *
     * @example example.com
     *
     * @var string
     */
    public $domainName;

    /**
     * @description The domain name.
     *
     * @example 200:44349|206:1753719|304:45|403:1095|416:1|499:332
     *
     * @var string
     */
    public $httpCode;

    /**
     * @description The detailed data of the accelerated domain names.
     *
     * @example 1
     *
     * @var int
     */
    public $ipv6Acc;

    /**
     * @description The metric that you want to query. You can specify one or more metrics and separate them with commas (,). Valid values: **bps**, **qps**, **traf**, **acc**, **ipv6\_traf**, **ipv6\_bps**, **ipv6\_acc**, **ipv6\_qps**, and **http_code**.
     *
     * @example 0
     *
     * @var float
     */
    public $ipv6Bps;

    /**
     * @description The proportions of HTTP status codes.
     *
     * @example 0
     *
     * @var float
     */
    public $ipv6Qps;

    /**
     * @description The amount of network traffic generated by IPv6 requests. Unit: bytes.
     *
     * @example 141718944482
     *
     * @var int
     */
    public $ipv6Traf;

    /**
     * @description The name of the region. You can call the [DescribeCdnRegionAndIsp](~~91077~~) operation to query regions.
     *
     * If you do not specify a region, data in all regions is queried.
     * @example 5998.47
     *
     * @var float
     */
    public $qps;

    /**
     * @description The ID of the request.
     *
     * @example 2020-07-05T22:00:00Z
     *
     * @var string
     */
    public $timeStamp;

    /**
     * @description The number of IPv6 requests.
     *
     * @example 789756701818
     *
     * @var int
     */
    public $traf;
    protected $_name = [
        'acc'        => 'Acc',
        'bps'        => 'Bps',
        'domainName' => 'DomainName',
        'httpCode'   => 'HttpCode',
        'ipv6Acc'    => 'Ipv6Acc',
        'ipv6Bps'    => 'Ipv6Bps',
        'ipv6Qps'    => 'Ipv6Qps',
        'ipv6Traf'   => 'Ipv6Traf',
        'qps'        => 'Qps',
        'timeStamp'  => 'TimeStamp',
        'traf'       => 'Traf',
    ];

    public function validate()
    {
    }

    public function toMap()
    {
        $res = [];
        if (null !== $this->acc) {
            $res['Acc'] = $this->acc;
        }
        if (null !== $this->bps) {
            $res['Bps'] = $this->bps;
        }
        if (null !== $this->domainName) {
            $res['DomainName'] = $this->domainName;
        }
        if (null !== $this->httpCode) {
            $res['HttpCode'] = $this->httpCode;
        }
        if (null !== $this->ipv6Acc) {
            $res['Ipv6Acc'] = $this->ipv6Acc;
        }
        if (null !== $this->ipv6Bps) {
            $res['Ipv6Bps'] = $this->ipv6Bps;
        }
        if (null !== $this->ipv6Qps) {
            $res['Ipv6Qps'] = $this->ipv6Qps;
        }
        if (null !== $this->ipv6Traf) {
            $res['Ipv6Traf'] = $this->ipv6Traf;
        }
        if (null !== $this->qps) {
            $res['Qps'] = $this->qps;
        }
        if (null !== $this->timeStamp) {
            $res['TimeStamp'] = $this->timeStamp;
        }
        if (null !== $this->traf) {
            $res['Traf'] = $this->traf;
        }

        return $res;
    }

    /**
     * @param array $map
     *
     * @return dataModule
     */
    public static function fromMap($map = [])
    {
        $model = new self();
        if (isset($map['Acc'])) {
            $model->acc = $map['Acc'];
        }
        if (isset($map['Bps'])) {
            $model->bps = $map['Bps'];
        }
        if (isset($map['DomainName'])) {
            $model->domainName = $map['DomainName'];
        }
        if (isset($map['HttpCode'])) {
            $model->httpCode = $map['HttpCode'];
        }
        if (isset($map['Ipv6Acc'])) {
            $model->ipv6Acc = $map['Ipv6Acc'];
        }
        if (isset($map['Ipv6Bps'])) {
            $model->ipv6Bps = $map['Ipv6Bps'];
        }
        if (isset($map['Ipv6Qps'])) {
            $model->ipv6Qps = $map['Ipv6Qps'];
        }
        if (isset($map['Ipv6Traf'])) {
            $model->ipv6Traf = $map['Ipv6Traf'];
        }
        if (isset($map['Qps'])) {
            $model->qps = $map['Qps'];
        }
        if (isset($map['TimeStamp'])) {
            $model->timeStamp = $map['TimeStamp'];
        }
        if (isset($map['Traf'])) {
            $model->traf = $map['Traf'];
        }

        return $model;
    }
}
